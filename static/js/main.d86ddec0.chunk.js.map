{"version":3,"sources":["UI/Input/Input.tsx","UI/Results/Results.tsx","constants.ts","UI/Select/Select.tsx","UI/Warning/Warning.tsx","Components/Calculator.tsx","App.tsx","index.tsx"],"names":["Input","labelText","id","state","setState","styles","className","htmlFor","step","type","value","onChange","e","Number","currentTarget","Results","result","OPERATORS","Select","disabled","map","operator","Warning","message","Calculator","useState","input_1","setInput_1","input_2","setInput_2","selectedOperator","setSelectedOperator","setResult","warning","setWarning","console","log","calculate","Math","round","onSubmit","preventDefault","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d86ddec0.chunk.js","sourcesContent":["interface InputProps {\r\n  labelText: string;\r\n  id: string;\r\n  state: number;\r\n  setState: React.Dispatch<React.SetStateAction<number>>;\r\n  styles: string;\r\n}\r\nconst Input = ({\r\n  labelText,\r\n  id,\r\n  state,\r\n  setState,\r\n  styles,\r\n}: InputProps) => {\r\n  return (\r\n    <div className={styles}>\r\n      <label htmlFor={id}>{labelText}</label>\r\n      <input\r\n        step={\"any\"}\r\n        id={id}\r\n        type={\"number\"}\r\n        value={state}\r\n        onChange={(e) => {\r\n          setState(Number(e.currentTarget.value));\r\n        }}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\nexport default Input;\r\n","interface ResultsProps {\r\n  result: number | null;\r\n  styles: string;\r\n}\r\nconst Results = ({ result, styles }: ResultsProps) => {\r\n  return (\r\n    <div className={styles}>\r\n      <h3>Rounded result: </h3>\r\n      <h2>{result}</h2>\r\n    </div>\r\n  );\r\n};\r\nexport default Results;\r\n","export const OPERATORS = [\"+\", \"-\", \"*\", \"/\"];\r\n","import { OPERATORS } from \"../../constants\";\r\ninterface SelectProps {\r\n  id: string;\r\n  state: string;\r\n  setState: React.Dispatch<React.SetStateAction<string>>;\r\n  styles: string;\r\n}\r\n\r\nconst Select = ({\r\n  id,\r\n  state,\r\n  setState,\r\n  styles,\r\n}: SelectProps) => {\r\n  return (\r\n    <>\r\n      <label htmlFor={id}>\r\n        {\"Please, select the operation:\"}\r\n      </label>\r\n      <select\r\n        className={styles}\r\n        id={id}\r\n        value={state}\r\n        onChange={(e) => setState(e.currentTarget.value)}\r\n      >\r\n        <option disabled={true} value='0'>\r\n          Math operators\r\n        </option>\r\n        {OPERATORS.map((operator) => (\r\n          <option key={operator} value={operator}>\r\n            {operator}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </>\r\n  );\r\n};\r\nexport default Select;\r\n","const Warning = ({ styles, message }: { styles:string; message: string }) => {\r\n  return (\r\n    <div className={styles}>\r\n      <h2>{message}</h2>\r\n    </div>\r\n  );\r\n};\r\nexport default Warning;\r\n","import React, { useState } from \"react\";\r\nimport { Input, Select, Results, Warning } from \"../UI\";\r\nimport \"./Calculator.css\";\r\n\r\nconst Calculator = () => {\r\n  const [input_1, setInput_1] = useState(0);\r\n  const [input_2, setInput_2] = useState(0);\r\n  const [selectedOperator, setSelectedOperator] =\r\n    useState(\"0\");\r\n  const [result, setResult] = useState<number | null>(null);\r\n  const [warning, setWarning] = useState(\"\");\r\n\r\n  console.log(\r\n    \"Check states\",\r\n    selectedOperator,\r\n    input_1,\r\n    input_2,\r\n    result,\r\n    warning\r\n  );\r\n\r\n  const handleSubmit = (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    calculate();\r\n  };\r\n\r\n  const calculate = () => {\r\n    setWarning(\"\");\r\n    switch (selectedOperator) {\r\n      case \"0\":\r\n        setWarning(\"You forgot select the operation\");\r\n        break;\r\n      case \"+\":\r\n        setResult(Math.round(input_1 + input_2));\r\n        break;\r\n      case \"-\":\r\n        setResult(Math.round(input_1 - input_2));\r\n        break;\r\n      case \"*\":\r\n        setResult(Math.round(input_1 * input_2));\r\n        break;\r\n      case \"/\":\r\n        if (input_2 !== 0) {\r\n          setResult(Math.round(input_1 / input_2));\r\n        } else {\r\n          setWarning(\"Cannot be divided by zero.\");\r\n        }\r\n        break;\r\n      default:\r\n        setWarning(\"Error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`Calculator ${\r\n        warning || result !== null\r\n          ? \"Calculator_padding\"\r\n          : \"\"\r\n      }`}\r\n    >\r\n      {warning ? (\r\n        <Warning message={warning} styles={\"warning\"} />\r\n      ) : result !== null ? (\r\n        <Results result={result} styles={\"results\"} />\r\n      ) : null}\r\n      <Select\r\n        id={\"select_1\"}\r\n        state={selectedOperator}\r\n        setState={setSelectedOperator}\r\n        styles={\"select\"}\r\n      />\r\n\r\n      <form className={\"form\"} onSubmit={handleSubmit}>\r\n        <Input\r\n          labelText={\"Input first number\"}\r\n          id={\"input_1\"}\r\n          state={input_1}\r\n          setState={setInput_1}\r\n          styles={\"input\"}\r\n        />\r\n        <Input\r\n          labelText={\"Input second number\"}\r\n          id={\"input_2\"}\r\n          state={input_2}\r\n          setState={setInput_2}\r\n          styles={\"input\"}\r\n        />\r\n        <input\r\n          type={\"submit\"}\r\n          value={\"Submit\"}\r\n          className={\"submit\"}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Calculator;\r\n","import Calculator from \"Components/Calculator\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className={\"App\"}>\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}